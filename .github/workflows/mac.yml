name: Scene Builder MacOS Bundles
on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: joschi/setup-jdk@v2
        with:
          java-version: 15
      - uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
      - name: Create Bundle using JPackage
        run: |
          wget -P /tmp https://download2.gluonhq.com/openjfx/15.0.1/openjfx-15.0.1_osx-x64_bin-jmods-SIGNED.zip
          unzip /tmp/openjfx-15.0.1_osx-x64_bin-jmods-SIGNED.zip -d /tmp
          TAG=${GITHUB_REF/refs\/tags\//}
          ./gradlew jlink jpackage -PVERSION=$TAG -PsigningPrefix="$GLUON_MACSIGN_PREFIX" -PsigningKeyUsername="$GLUON_MACSIGN_USER"
        env:
          JAVAFX_HOME: /tmp/javafx-jmods-15.0.1/
          JPACKAGE_HOME: ${{env.JAVA_HOME}}
          GLUON_MACSIGN_PREFIX: ${{ secrets.GLUON_MACSIGN_PREFIX }}
          GLUON_MACSIGN_USER: ${{ secrets.GLUON_MACSIGN_USER }}
      - run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=path::app/build/SceneBuilder-$TAG.dmg
        id: outputfile
      - name: "Notarize Release Build"
        uses: erwin1/xcode-notarize@main
        with:
          product-path: ${{ steps.outputfile.outputs.path }}
          appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
          appstore-connect-password: ${{ secrets.NOTARIZATION_PASSWORD }}
          primary-bundle-id: com.gluonhq.scenebuilder
          asc-provider: ${{ secrets.GLUON_MACSIGN_PREFIX }}
          verbose: true
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: SceneBuilder-${{ runner.os }}
          path: ${{ steps.outputfile.outputs.path }}
      - name: Upload to AWS S3
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          aws s3 cp app/build/SceneBuilder-$TAG.dmg ${{ env.AWS_S3_BUCKET }}/scenebuilder/$TAG/install/mac/ --acl public-read --region us-east-1 --debug
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TAG: ${{ steps.tag_name.outputs.SOURCE_TAG }}
